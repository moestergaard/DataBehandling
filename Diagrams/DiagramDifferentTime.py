import numpy as np
import matplotlib.pyplot as plt
from matplotlib.lines import Line2D
import tikzplotlib

    
def plot_confidence_intervals(data_sets, labels, title):
    fig, ax = plt.subplots()
    x = np.arange(len(data_sets[0]))
    width = 0.10

    z_score = {2: 4.303, 3: 3.182, 4: 2.776, 5: 2.571, 6: 2.447, 7: 2.365, 8: 2.306, 9: 2.262, 10: 2.228, 11: 2.201, 12: 2.179, 13: 2.160, 14: 2.145}
    
    # colors = ['blue', 'orange', 'green', 'red', 'purple', 'brown', 'teal']
    # colors = ['red', 'green', 'blue', 'orange', 'purple', 'teal', 'brown']
    # colors = ['blue', 'orange', 'green', 'red', 'purple', 'pink', 'gray']
    # colors = ['red', 'green', 'blue', 'orange', 'magenta', 'brown', 'gray']
    # colors = ['red', 'green', 'blue', 'orange', 'purple', 'brown', 'darkgray']
    # colors = ["#B7F0B1", "#2EBD4F", "#B4E1E7", "#2471A3", "#BDADEA", "#6A5ACD", "#FFC0CB"]
    # colors = ["#9ACD32", "#FFA500", "#ADD8E6", "#4B0082", "#FF69B4", "#FF0000", "#A9A9A9"]
    # colors = ['#252525', '#737373', '#08306b', '#2171b5', '#006d2c', '#41ab5d', '#99d8c9']
    
    # group1 = ['#74c476', '#31a354', '#006d2c']
    # group2 = ['#6baed6', '#3182bd', '#08519c']
    
    group1 = ['#252525', '#737373']
    group2 = ['#74c476', '#31a354', '#006d2c', '#6baed6', '#3182bd']
    colors = group1 + group2


    for j, data_set in enumerate(data_sets):
        for i, data in enumerate(data_set):
            mean = np.mean(data)
            std = np.sqrt(np.sum((data-mean)**2)/(len(data)-1))
            margin_of_error = z_score[len(data)-1] * (std / np.sqrt(len(data)))
            lower_bound = mean - margin_of_error
            upper_bound = mean + margin_of_error
            
            print(f"{(lower_bound*100).__round__(1)} & {(mean*100).__round__(1)} & {(upper_bound*100).__round__(1)} &")
            
            # print(lower_bound)
            # print(mean)
            # print(upper_bound)
            # print()

            # Plot data points
            ax.plot(x[i]+j*width, mean*100, marker='o', markersize = 5, color=colors[j], label=labels[j] if i == 0 else "")

            # Plot error bars
            ax.errorbar(x[i]+j*width, mean*100, yerr=margin_of_error*100, fmt='none', ecolor=colors[j], capsize=3)
            
            # Plot the values for the lower bound and upper bound
            # ax.text(x[i]+j*width, upper_bound+0.02, f"{upper_bound:.3f}", ha='center', va='bottom', fontsize=8)
            # ax.text(x[i]+j*width, lower_bound-0.02, f"{lower_bound:.3f}", ha='center', va='top', fontsize=8)
            
            
    # Add tick at the center of the x-axis
    ax.axvline(x=1.8, color='#d9d9d9', linewidth=1.5)
    
    # Set axis labels and title
    ax.set_xticks(x+3*width)
    ax.set_xticklabels(['Formiddag:\nSamme tidspunkt', 'Formiddag:\nAndet tidspunkt', 'Aften:\nSamme tidspunkt', 'Aften:\nAndet tidspunkt'], rotation=45, fontsize=9)
    # for tick in ax.xaxis.get_major_ticks():
    #     tick.set_pad(2)
    fig.subplots_adjust(bottom=0.25)
    fig.subplots_adjust(right=0.8)
    ax.set_ylabel('NÃ¸jagtighed, %', fontsize=10)
    # ax.set_yticklabels(fontsize = 9)
    ax.set_title(title, fontsize=12)

    handles = [Line2D([0], [0], color=color, linewidth=2) for color in colors]
    ax.legend(handles=handles, labels=labels, loc='center left', bbox_to_anchor=(1, 0.5), fontsize=9)

    # tikzplotlib.save("differentTime.tex")

    # Show plot
    plt.show()
    
""" NEW DATA ONLY FROM 45 MINUTES"""

# Define data
dataSVM3 = [
    [0.8249818445896877, 0.8080736543909348, 0.8532176428054953, 0.7959914101646385, 0.8498583569405099, 0.8148951554591468, 0.8339298496778812, 0.7719680464778504, 0.8640636297903109, 0.8267716535433071, 0.8576615831517792, 0.8548158640226629],
    [0.8348754448398576, 0.8285302593659942, 0.8148409893992933, 0.7736654804270463, 0.7377521613832853, 0.8296819787985866, 0.8348754448398576, 0.8378962536023055, 0.826148409893993, 0.890391459074733, 0.9005763688760807, 0.8678445229681979],
    [0.8623919308357348, 0.8501766784452297, 0.903202846975089, 0.8812720848056537, 0.7807829181494662, 0.7507204610951008],
    [0.698639942734431, 0.7523602033405955, 0.8236543909348442, 0.8806941431670282, 0.7129563350035791, 0.7901234567901234, 0.8519830028328612, 0.9161243673174259, 0.6929133858267716, 0.8569353667392883, 0.8548158640226629, 0.6644974692697035]
    # [0.7828612926652142, 0.7889518413597734, 0.7917570498915402, 0.7437365783822477, 0.7046742209631728, 0.8228488792480115, 0.690050107372942, 0.8046477850399419, 0.8438177874186551, 0.807444523979957, 0.8511256354393609, 0.806657223796034],
    # [0.795017793594306, 0.7795389048991355, 0.7469964664310954, 0.7672597864768683, 0.8321325648414986, 0.8148409893992933, 0.7814946619217081, 0.8162824207492796, 0.841696113074205, 0.8327402135231317, 0.8544668587896254, 0.8240282685512368],
    # [0.8436599423631124, 0.8318021201413428, 0.8455516014234875, 0.8254416961130742, 0.801423487544484, 0.8328530259365994],
    # [0.7430207587687903, 0.7857661583151779, 0.8101983002832861, 0.8228488792480115, 0.7158196134574087, 0.7516339869281046, 0.7953257790368272, 0.8373101952277657, 0.6649964209019327, 0.8235294117647058, 0.8172804532577904, 0.7758496023138105]
]

""" SVM 4 """
dataSVM4 = [
    [0.5296017222820237, 0.5477707006369427, 0.42394822006472493, 0.6881028938906752, 0.673036093418259, 0.668824163969795, 0.6655948553054662, 0.6566200215285253, 0.6693635382955772, 0.5171489817792069, 0.6528525296017222, 0.671443736730361],
    [0.5540106951871657, 0.45318352059925093, 0.36217948717948717, 0.7074866310160428, 0.6645264847512039, 0.6490384615384616, 0.6898395721925134, 0.6415195291599786, 0.6720085470085471, 0.6898395721925134, 0.7528089887640449, 0.7206196581196581],
    [0.6779026217228464, 0.6469017094017094, 0.6641711229946524, 0.7008547008547008, 0.6336898395721925, 0.6479400749063671],
    [0.5766345123258306, 0.6173304628632938, 0.6549893842887473, 0.6974110032362459, 0.46891747052518756, 0.56243272335845, 0.6003184713375797, 0.7508090614886731, 0.5412647374062165, 0.6749192680301399, 0.6794055201698513, 0.6699029126213593]
    # [0.6151776103336921, 0.5753715498938429, 0.5571736785329018, 0.5535905680600214, 0.554140127388535, 0.633764832793959, 0.617363344051447, 0.6119483315392895, 0.6316073354908306, 0.6404072883172561, 0.7120559741657696, 0.6841825902335457],
    # [0.5967914438502674, 0.5222043873729267, 0.4962606837606838, 0.586096256684492, 0.6345639379347244, 0.6260683760683761, 0.6112299465240641, 0.5987158908507223, 0.6533119658119658, 0.6310160427807486, 0.7233814874264313, 0.7136752136752137],
    # [0.64633493846977, 0.625, 0.6422459893048128, 0.7158119658119658, 0.6149732620320856, 0.6131621187800963],
    # [0.5878885316184351, 0.6792249730893434, 0.6459660297239915, 0.6418554476806904, 0.5482315112540193, 0.6442411194833154, 0.6130573248407644, 0.7745415318230853, 0.5493033226152197, 0.6630785791173305, 0.6539278131634819, 0.5916936353829557]
]

""" NN3-B """
dataNN3B = [
    [0.6252723311546841, 0.5106232294617564, 0.4924078091106291, 0.6607015032211883, 0.6444759206798867, 0.6536514822848879, 0.5826771653543307, 0.6180101670297748, 0.6536514822848879, 0.6964924838940587, 0.7254901960784313, 0.6975920679886686],
    [0.5231316725978647, 0.5244956772334294, 0.488339222614841, 0.6170818505338078, 0.6635446685878963, 0.7031802120141343, 0.6562277580071174, 0.6562277580071174, 0.6593639575971731, 0.7238434163701067, 0.7824207492795389, 0.7858657243816255],
    [0.7089337175792507, 0.6558303886925795, 0.6761565836298933, 0.6303886925795052, 0.6903914590747331, 0.6822766570605188],
    [0.670722977809592, 0.5802469135802469, 0.5432011331444759, 0.6644974692697035, 0.4853256979241231, 0.5272331154684096, 0.4440509915014164, 0.6464208242950108, 0.6478167501789549, 0.738562091503268, 0.6565155807365439, 0.6305133767172812]
]

""" NN3-B-P """
dataNN3BP = [
    [0.4731601257683388, 0.39461996446919867, 0.3683883947503606, 0.5152489419148251, 0.49765778796754206, 0.504309853050475, 0.4444705605829122, 0.47154285963016995, 0.4956795667131823, 0.522369362920544, 0.5512113447740529, 0.5369652374321794],
    [0.3946524064171123, 0.3905749892569124, 0.3759077452345569, 0.4732620320855615, 0.5109590777069974, 0.5539147427421337, 0.5197860962566845, 0.5197860962566845, 0.5101112814332018, 0.5529411764705882, 0.5901433751832806, 0.6132870733334114],
    [0.5318243478962317, 0.4999836178752384, 0.5229946524064172, 0.527585157794966, 0.5272727272727272, 0.5280804342872163],
    [0.514769312248452, 0.4392475272978417, 0.41799407019734003, 0.5032306938382073, 0.4327575996691051, 0.5027024805049222, 0.45644926057521484, 0.5204918888796364, 0.4938582982418921, 0.5646664947441862, 0.49768329572189945, 0.4994561136153079]
]

""" NN3-UB """
dataNN3UB = [
    [0.6151053013798112, 0.5184135977337111, 0.660882140274765, 0.5597709377236937, 0.5594900849858357, 0.5502530730296457, 0.5096635647816751, 0.6100217864923747, 0.6146059291395517, 0.506084466714388, 0.4749455337690632, 0.48158640226628896],
    [0.6206405693950178, 0.6527377521613833, 0.5667844522968198, 0.5387900355871886, 0.5814121037463977, 0.6063604240282685, 0.6441281138790036, 0.6441281138790036, 0.6537102473498233, 0.5209964412811388, 0.5561959654178674, 0.5724381625441696],
    [0.6786743515850144, 0.6515901060070671, 0.6405693950177936, 0.5413427561837456, 0.7224199288256228, 0.7377521613832853],
    [0.6249105225483178, 0.4495279593318809, 0.5191218130311614, 0.6637744034707158, 0.5390121689334287, 0.5134350036310821, 0.4780453257790368, 0.4584237165582068, 0.651395848246242, 0.7233115468409586, 0.6706798866855525, 0.6717281272595806]
]

""" NN3-UB-P """
dataNN3UBP = [
    [0.4704655829332115, 0.401522062707063, 0.5172550336096766, 0.42995613506249303, 0.4302107840783599, 0.4212469069923786, 0.4227594006651476, 0.4935956190118232, 0.4724870164940906, 0.4760452263684136, 0.4241355917271567, 0.3972067508522591],
    [0.47754010695187166, 0.5077492705920208, 0.44165506266162724, 0.41229946524064176, 0.4446144062406782, 0.47373126294480394, 0.5010695187165776, 0.5010695187165776, 0.5021062731836319, 0.40267379679144377, 0.42267774266290853, 0.46137329011572803],
    [0.5532293344525345, 0.6149720918803169, 0.4941176470588235, 0.49055336477141087, 0.5791443850267379, 0.577304235067831],
    [0.5187895017193407, 0.4402626537291724, 0.5302311902818457, 0.537212471185971, 0.44103951049538076, 0.4666525550728289, 0.4173263672156335, 0.35328656370976447, 0.4922782294682636, 0.5528242198608457, 0.508836186200605, 0.5431455192014486]
]

""" NN4-UB """
dataNN4UB = [
    [0.5446716899892358, 0.5015923566878981, 0.49460625674217906, 0.5310825294748124, 0.5159235668789809, 0.580906148867314, 0.47266881028938906, 0.5597416576964478, 0.49730312837108953, 0.40514469453376206, 0.46932185145317545, 0.3970276008492569],
    [0.5224598930481283, 0.4943820224719101, 0.42467948717948717, 0.5181818181818182, 0.48796147672552165, 0.5283119658119658, 0.5684491978609626, 0.5684491978609626, 0.47863247863247865, 0.4737967914438503, 0.4483681112894596, 0.43856837606837606],
    [0.5591225254146602, 0.5416666666666666, 0.4475935828877005, 0.6041666666666666, 0.49411764705882355, 0.4751203852327448],
    [0.5680600214362272, 0.6076426264800862, 0.6125265392781316, 0.5943905070118662, 0.3912111468381565, 0.5182992465016146, 0.40498938428874737, 0.5080906148867314, 0.48767416934619506, 0.5430570505920345, 0.4888535031847134, 0.5048543689320388]
]


# Define data matrices and labels
data_sets = [dataSVM3, dataSVM4, dataNN3B, dataNN3BP, dataNN3UB, dataNN3UBP, dataNN4UB]
labels = ['SVM3', 'SVM4', 'NN3-B', 'NN3-B-P', 'NN3-UB', 'NN3-UB-P', 'NN4-UB']

# Plot confidence intervals
plot_confidence_intervals(data_sets, labels, 'Konfidensintervaller for forskellige tidspunkter')
