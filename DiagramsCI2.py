import numpy as np
import matplotlib.pyplot as plt
from matplotlib.lines import Line2D


# def plot_confidence_intervals(data_sets, labels, title):
#     fig, ax = plt.subplots()
#     # x = np.arange(len(data_sets[0][0]))
#     x = np.arange(len(data_sets[0]))
#     print(x)
#     width = 0.01

#     confidence_level = 0.95
#     z_score = 2.776
    
#     colors = ['blue', 'orange', 'green', 'red', 'purple']

#     for j, data_set in enumerate(data_sets):
#         for i, data in enumerate(data_set):
#             mean = np.mean(data)
#             std = np.sqrt(np.sum((data-mean)**2)/(len(data)-1))
#             margin_of_error = z_score * (std / np.sqrt(len(data)))
#             lower_bound = mean - margin_of_error
#             upper_bound = mean + margin_of_error

#             # Plot data points
#             print(i)
#             print(j)
#             print(x)
#             print(x[i]+(j-2)*width, mean, colors[j])
#             ax.plot(x[i]+(j-2)*width, mean, marker='o', color=colors[j])

#             # Plot error bars
#             ax.errorbar(x[i]+(j-2)*width, mean, yerr=margin_of_error, fmt='none', ecolor=colors[j], capsize=3)

#             # Add confidence interval labels
#             # if j == 0:
#             #     ax.text(x[i], upper_bound+0.001, '{:.4f}'.format(upper_bound), ha='center')
#             #     ax.text(x[i], lower_bound-0.003, '{:.4f}'.format(lower_bound), ha='center')

#     # Set axis labels and title
#     ax.set_xticks(x)
#     ax.set_xticklabels(['Eget dataset morgen', 'Eget dataset aften', 'Anden dag morgen', 'Andet tidspunkt morgen', 'Anden dag aften', 'Andet tidspunkt aften'], rotation=45)
#     fig.subplots_adjust(bottom=0.3)
#     # ax.set_xticklabels(['data_1', 'data_2', 'data_3', 'data_4', 'data_5', 'data_6'])
#     ax.set_xlabel('Data set')
#     ax.set_ylabel('Accuracy')
#     ax.set_title(title)

#     # Add legend
#     ax.legend(labels)

#     # Show plot
#     plt.show()
    
    
def plot_confidence_intervals(data_sets, labels, title):
    fig, ax = plt.subplots()
    x = np.arange(len(data_sets[0]))
    width = 0.15

    confidence_level = 0.95
    z_score = {2: 4.303, 3: 3.182, 4: 2.776, 5: 2.571, 6: 2.447, 7: 2.365, 8: 2.306, 9: 2.262, 10: 2.228, 11: 2.201, 12: 2.179, 13: 2.160, 14: 2.145}
    # z_score = {2: 1.96, 3: 1.96}
    # z_score = 2.132
    
    colors = ['blue', 'orange', 'green', 'red', 'purple']

    for j, data_set in enumerate(data_sets):
        for i, data in enumerate(data_set):
            mean = np.mean(data)
            std = np.sqrt(np.sum((data-mean)**2)/(len(data)-1))
            margin_of_error = z_score[len(data)-1] * (std / np.sqrt(len(data)))
            lower_bound = mean - margin_of_error
            upper_bound = mean + margin_of_error

            # Plot data points
            ax.plot(x[i]+j*width, mean, marker='o', color=colors[j], label=labels[j] if i == 0 else "")

            # Plot error bars
            ax.errorbar(x[i]+j*width, mean, yerr=margin_of_error, fmt='none', ecolor=colors[j], capsize=3)

            # Add confidence interval labels
            # if j == 0:
            #     ax.text(x[i]+j*width, upper_bound+0.001, '{:.4f}'.format(upper_bound), ha='center')
            #     ax.text(x[i]+j*width, lower_bound-0.003, '{:.4f}'.format(lower_bound), ha='center')

    # Set axis labels and title
    ax.set_xticks(x+width)
    # ax.set_xticklabels(['Formiddag: Eget dataset', 'Aften: Eget dataset', 'Formiddag: Anden dag', 'Formiddag: Andet tidspunkt', 'Aften: Anden dag', 'Aften: Andet tidspunkt'], rotation=45)
    ax.set_xticklabels(['Formiddag: Anden dag', 'Formiddag: Andet tidspunkt', 'Aften: Anden dag', 'Aften: Andet tidspunkt'], rotation=45)
    fig.subplots_adjust(bottom=0.35)
    fig.subplots_adjust(right=0.8)
    # ax.set_xlabel('Data set')
    ax.set_ylabel('NÃ¸jagtighed')
    ax.set_title(title)

    # Add legend
    # ax.legend(labels, bbox_to_anchor=(1.05, 0.5), loc='center left')
    handles = [Line2D([0], [0], color=color, linewidth=2) for color in colors]
    ax.legend(handles=handles, labels=labels, loc='center left', bbox_to_anchor=(1, 0.5))
    # ax.legend()

    # Show plot
    plt.show()
    
    
# def plot_confidence_intervals(data_sets, labels, title):
#     fig, ax = plt.subplots()
#     x = np.arange(len(data_sets[0]))
#     width = 0.01
#     confidence_level = 0.95
#     z_score = 2.776
#     colors = ['blue', 'orange', 'green', 'red', 'purple']

#     for j, data_set in enumerate(data_sets):
#         for i, data in enumerate(data_set):
#             mean = np.mean(data)
#             std = np.sqrt(np.sum((data-mean)**2)/(len(data)-1))
#             margin_of_error = z_score * (std / np.sqrt(len(data)))
#             lower_bound = mean - margin_of_error
#             upper_bound = mean + margin_of_error

#             # Plot data points
#             ax.plot(x[i]+(j-2)*width, mean, marker='o', color=colors[j])

#             # Plot error bars
#             ax.errorbar(x[i]+(j-2)*width, mean, yerr=margin_of_error, fmt='none', ecolor=colors[j], capsize=3)

#     # Set axis labels and title
#     ax.set_xticks(x)
#     ax.set_xticklabels(['Eget dataset morgen', 'Eget dataset aften', 'Anden dag morgen', 'Andet tidspunkt morgen', 'Anden dag aften', 'Andet tidspunkt aften'], rotation=45)
#     fig.subplots_adjust(bottom=0.3)
#     ax.set_xlabel('Data set')
#     ax.set_ylabel('Accuracy')
#     ax.set_title(title)

#     # Add legend
#     ax.legend(labels, bbox_to_anchor=(1.05, 0.5), loc='center left')

#     # Show plot
#     plt.show()


# Define data
# dataSVM3 = [
#     [0.8917,	0.8871,	0.8510,	0.8619,	0.8309],
#     [0.8960,	0.8766,	0.8638,	0.8496,	0.8507],
#     [0.7885,	0.7823,	0.7658,	0.7781,	0.7361],
#     [0.8118,	0.7741,	0.8052,	0.7906,	0.7856], 
#     [0.8290,	0.8218,	0.8022,	0.8231,	0.7959],
#     [0.7863,	0.7900,	0.7679,	0.7659,	0.7707]
# ]

# """ SVM 4 """
# dataSVM4 = [
#     [0.8053, 0.7730, 0.7553, 0.7163, 0.6936],
#     [0.7950, 0.7882, 0.7419, 0.7217, 0.6793],
#     [0.6348, 0.6375, 0.6342, 0.6216, 0.6237],
#     [0.6265, 0.5296, 0.6289, 0.6325, 0.6139],
#     [0.6400, 0.6525, 0.6442, 0.6511, 0.6123],
#     [0.6337, 0.6510, 0.6462, 0.6315, 0.5989]
# ]

# """ NN3-B """
# dataNN3B = [
#     [0.7572, 0.6048, 0.5374, 0.5091, 0.4611],
#     [0.7785, 0.6651, 0.6102, 0.6018, 0.5110],
#     [0.6535, 0.5382, 0.5050, 0.4695, 0.4516],
#     [0.6680, 0.5673, 0.5118, 0.4905, 0.4586],
#     [0.7193, 0.6105, 0.5808, 0.5708, 0.4764],
#     [0.6318, 0.5523, 0.5299, 0.5414, 0.4622]
# ]

# """ NN3-UB """
# dataNN3UB = [
#     [0.7188, 0.6823, 0.6036, 0.5104, 0.5049],
#     [0.7376, 0.6998, 0.5639, 0.5482, 0.5451],
#     [0.6475, 0.6213, 0.5698, 0.4746, 0.4770],
#     [0.6743, 0.6304, 0.5817, 0.5083, 0.4999],
#     [0.6837, 0.6402, 0.5411, 0.5225, 0.5230],
#     [0.6079, 0.5860, 0.5084, 0.4845, 0.4869]
# ]

# """ NN4-UB """
# dataNN4UB = [
#     [0.6148, 0.5326, 0.4243, 0.3866, 0.3058],
#     [0.6822, 0.5867, 0.4486, 0.4286, 0.4193],
#     [0.4864, 0.4566, 0.3822, 0.3577, 0.2904],
#     [0.4824, 0.4711, 0.4022, 0.3627, 0.2862],
#     [0.5060, 0.5026, 0.4077, 0.3999, 0.3662],
#     [0.5087, 0.4982, 0.4105, 0.3991, 0.3842]
# ]







# """ NEW DATA ONLY FROM 45 MINUTES"""

# # Define data
# dataSVM3 = [
#     [0.8714285714285714, 0.9012681159420289, 0.8653675819309123, 0.9059674502712477],
#     [0.8994661921708185, 0.8857913669064749, 0.9090106007067138],
#     [0.7265100671140939, 0.7447519083969466, 0.7890305508780371, 0.8160535117056856],
#     [0.7630703422053232, 0.7870722433460076, 0.8343631178707225, 0.847671102661597],
#     [0.8341063146628612, 0.8375886524822695, 0.7977085571070534],
#     [0.802298437780571, 0.7913449452325373, 0.7647692583946849]
# ]

# """ SVM 4 """
# dataSVM4 = [
#     [0.811662198391421, 0.7833109017496636, 0.7526525198938993, 0.8436657681940701],
#     [0.7473262032085561, 0.8127090301003345, 0.852],
#     [0.5934596140100071, 0.6302640970735189, 0.6525636428827537, 0.6492510699001427],
#     [0.5501693102833719, 0.6366066654785243, 0.6259133844234539, 0.6872215291391909],
#     [0.6361935311414061, 0.6686264029930519, 0.5910671302487296],
#     [0.646743500402037, 0.6718038059501474, 0.6056017153578129]
# ]

# """ NN3-B """
# dataNN3B = [
#     [0.7071428571428572, 0.776566757493188, 0.6802480070859167, 0.8318264014466547],
#     [0.7633451957295374, 0.7648648648648648, 0.8074204946996466],
#     [0.612895493767977, 0.6226145038167938, 0.610777002646139, 0.767797419971333],
#     [0.4227661596958175, 0.6337927756653993, 0.685361216730038, 0.7789923954372624],
#     [0.7242240456653586, 0.6790780141843972, 0.7547440028643037],
#     [0.6367390913988149, 0.549470281917759, 0.6656491291075597]
# ]

# """ NN3-UB """
# dataNN3UB = [
#     [0.6911369740376008, 0.7465940054495913, 0.704162976085031, 0.7332730560578662],
#     [0.7001779359430605, 0.745945945945946, 0.7667844522968198],
#     [0.636385426653883, 0.6414599236641222, 0.6410873225884051, 0.6710463449593884],
#     [0.627851711026616, 0.6668250950570342, 0.7255228136882129, 0.684648288973384],
#     [0.6621476988940421, 0.6297872340425532, 0.7590404582885786],
#     [0.6054947028191776, 0.4938049919195547, 0.7069491829771952]
# ]

# """ NN4-UB """
# dataNN4UB = [
#     [0.7198391420911529, 0.6256720430107527, 0.5722811671087533, 0.5414699932569117],
#     [0.6183155080213903, 0.6608695652173913, 0.7675350701402806],
#     [0.46729807005003576, 0.4942897930049964, 0.5048404446038006, 0.4791369472182596],
#     [0.45820709320976655, 0.4713954731776867, 0.5360898235608625, 0.4808412047763322],
#     [0.5690991713445602, 0.5093532870122929, 0.43942230542925914],
#     [0.49343339587242024, 0.45537389439828463, 0.5171535781291879]
# ]


""" NEW DATA ONLY FROM 45 MINUTES"""

# Define data
dataSVM3 = [
    [0.8031953522149601, 0.8002832861189801, 0.7462039045553145, 0.7430207587687903, 0.7351274787535411, 0.8199566160520607, 0.725125268432355, 0.8184458968772694, 0.8481561822125814, 0.7938439513242663, 0.8395061728395061, 0.8279036827195467],
    [0.7651245551601423, 0.7838616714697406, 0.6643109540636042, 0.7473309608540926, 0.8134005763688761, 0.8134275618374558, 0.804982206405694, 0.8386167146974063, 0.841696113074205, 0.8498220640569395, 0.8580691642651297, 0.8275618374558303],
    [0.8595100864553314, 0.823321554770318, 0.8370106761565836, 0.8332155477031802, 0.8099644128113879, 0.8148414985590778],
    [0.753042233357194, 0.775599128540305, 0.8038243626062322, 0.8438177874186551, 0.6936292054402291, 0.8140885984023238, 0.8087818696883853, 0.8474331164135936, 0.6478167501789549, 0.8162672476397966, 0.8038243626062322, 0.7765726681127982]
]

""" SVM 4 """
dataSVM4 = [
    [0.6184068891280947, 0.6252653927813163, 0.5118662351672061, 0.6077170418006431, 0.5339702760084926, 0.686084142394822, 0.6045016077170418, 0.6490850376749193, 0.6850053937432579, 0.567524115755627, 0.7190527448869752, 0.673036093418259],
    [0.613903743315508, 0.5088282504012841, 0.5032051282051282, 0.5882352941176471, 0.651685393258427, 0.6324786324786325, 0.646524064171123, 0.6115569823434992, 0.6346153846153846, 0.613903743315508, 0.7164258962011771, 0.6816239316239316],
    [0.6527554842161584, 0.6201923076923077, 0.6497326203208557, 0.7126068376068376, 0.5775401069518716, 0.613697164258962],
    [0.605037513397642, 0.6889128094725512, 0.6257961783439491, 0.6229773462783171, 0.5594855305466238, 0.6969860064585576, 0.6295116772823779, 0.7831715210355987, 0.5385852090032154, 0.670075349838536, 0.6523354564755839, 0.5496224379719525]
]

""" NN3-B """
dataNN3B = [
    [0.6848220769789397, 0.6742209631728046, 0.7071583514099783, 0.6263421617752326, 0.7514164305949008, 0.7440347071583514, 0.5404438081603435, 0.6528685548293391, 0.6399132321041214, 0.7465998568360773, 0.6957153231663036, 0.7089235127478754],
    [0.41637010676156583, 0.6938040345821326, 0.7151943462897526, 0.5928825622775801, 0.7442363112391931, 0.8056537102473498, 0.6540925266903914, 0.6540925266903914, 0.6862190812720848, 0.7644128113879004, 0.7536023054755043, 0.8077738515901061],
    [0.7327089337175793, 0.7314487632508834, 0.7053380782918149, 0.48551236749116605, 0.7402135231316725, 0.7694524495677233],
    [0.6936292054402291, 0.7029774872912128, 0.6678470254957507, 0.7324656543745481, 0.47029348604151755, 0.4045025417574437, 0.43130311614730876, 0.48011569052783803, 0.5676449534717252, 0.7828612926652142, 0.7025495750708215, 0.7237888647866956]
]

""" NN3-UB """
dataNN3UB = [
    [0.6376180101670298, 0.46246458923512745, 0.6225596529284165, 0.6735862562634216, 0.5842776203966006, 0.5654374548083876, 0.5819613457408733, 0.673202614379085, 0.6688358640636298, 0.725125268432355, 0.6688453159041394, 0.6529745042492918],
    [0.6120996441281139, 0.6138328530259366, 0.5208480565371024, 0.6135231316725979, 0.553314121037464, 0.6275618374558304, 0.7074733096085409, 0.7074733096085409, 0.6932862190812721, 0.6896797153024911, 0.7269452449567724, 0.7286219081272085],
    [0.6829971181556196, 0.6855123674911661, 0.691814946619217, 0.49469964664310956, 0.7701067615658364, 0.3854466858789625],
    [0.6556907659269864, 0.6485112563543937, 0.660056657223796, 0.6247288503253796, 0.47745168217609163, 0.5032679738562091, 0.4660056657223796, 0.46493130874909616, 0.6886184681460272, 0.5018155410312273, 0.34702549575070823, 0.5285610990600145]
]

""" NN4-UB """
dataNN4UB = [
    [0.5091496232508074, 0.5148619957537155, 0.48813376483279397, 0.46516613076098606, 0.5069002123142251, 0.47680690399137, 0.40353697749196143, 0.5635091496232508, 0.5480043149946062, 0.46891747052518756, 0.4730893433799785, 0.39490445859872614],
    [0.4828877005347594, 0.5082932049224184, 0.42895299145299143, 0.4823529411764706, 0.41519529159978596, 0.4877136752136752, 0.5438502673796791, 0.5438502673796791, 0.5197649572649573, 0.516042780748663, 0.3927233814874264, 0.39636752136752135],
    [0.5612627073301231, 0.5651709401709402, 0.4657754010695187, 0.5363247863247863, 0.44278074866310163, 0.4986623863028357],
    [0.4062165058949625, 0.6254036598493004, 0.6019108280254777, 0.581984897518878, 0.41854233654876744, 0.569967707212056, 0.40870488322717624, 0.5943905070118662, 0.4753483386923901, 0.5247578040904198, 0.5233545647558386, 0.4989212513484358]
]


# Define data matrices and labels
data_sets = [dataSVM3, dataSVM4, dataNN3B, dataNN3UB, dataNN4UB]
labels = ['SVM3', 'SVM4', 'NN3-B', 'NN3-UB', 'NN4-UB']

# Plot confidence intervals
plot_confidence_intervals(data_sets, labels, 'Konfidensintervaler for forskellige modeller')
